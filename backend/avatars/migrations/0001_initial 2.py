# Generated by Django 4.2.7 on 2025-06-15 10:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Avatar",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "height",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(50)],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(20)],
                    ),
                ),
                (
                    "chest",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(50)],
                    ),
                ),
                (
                    "waist",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(40)],
                    ),
                ),
                (
                    "hips",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(50)],
                    ),
                ),
                (
                    "shoulder_width",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "arm_length",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "inseam",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "neck",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("skin_tone", models.CharField(blank=True, max_length=20)),
                ("hair_color", models.CharField(blank=True, max_length=20)),
                ("hair_style", models.CharField(blank=True, max_length=50)),
                (
                    "body_type",
                    models.CharField(
                        choices=[
                            ("ectomorph", "Ectomorph"),
                            ("mesomorph", "Mesomorph"),
                            ("endomorph", "Endomorph"),
                            ("athletic", "Athletic"),
                            ("average", "Average"),
                        ],
                        default="average",
                        max_length=50,
                    ),
                ),
                ("model_file_url", models.URLField(blank=True, max_length=500)),
                ("thumbnail_url", models.URLField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avatars",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "avatars",
            },
        ),
        migrations.CreateModel(
            name="AvatarGenerationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "generation_method",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("photo", "Photo"),
                            ("scan", "3D Scan"),
                        ],
                        max_length=50,
                    ),
                ),
                ("source_images", models.JSONField(blank=True, default=list)),
                ("processing_time_ms", models.IntegerField(blank=True, null=True)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "avatar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generation_logs",
                        to="avatars.avatar",
                    ),
                ),
            ],
            options={
                "db_table": "avatar_generation_logs",
            },
        ),
        migrations.AddIndex(
            model_name="avatar",
            index=models.Index(
                fields=["user", "is_active"], name="avatars_user_id_ab6c74_idx"
            ),
        ),
    ]
